AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud_resume

  Sample SAM Template for cloud_resume

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  MyWebsite: # Website Bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-cloud-resume-v2.0
      AccessControl: Private

  BucketPolicy: #Policy
    Type: AWS::S3::BucketPolicy
    DependsOn: MyOAI
    Properties:
      Bucket: !Ref MyWebsite
      PolicyDocument:
        Id: MyPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Action: 
            - "s3:GetObject"
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyWebsite
                - /*
            Principal:
              CanonicalUser:
                !GetAtt MyOAI.S3CanonicalUserId 

  MyOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties: 
      CloudFrontOriginAccessIdentityConfig: 
          Comment: 'myOAI for cloud resume'

  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: 
          - phdit.net # DON'T HARDCODE !!!
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: !Join
          - ''
          - -  !Ref MyWebsite
            - '.'
            - 's3.us-east-1.amazonaws.com'

          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues: 
             QueryString: 'false'
        Origins:
          - DomainName: !Join
              - ''
              - -  !Ref MyWebsite
                - '.s3.us-east-1.amazonaws.com'

            Id: !Join
              - ''
              - -  !Ref MyWebsite
                - '.s3.us-east-1.amazonaws.com'

            S3OriginConfig: 
                OriginAccessIdentity: !Join
                - ''
                - -  'origin-access-identity/cloudfront/'
                  -  !Ref MyOAI
        Enabled: "True"
        ViewerCertificate: 
          AcmCertificateArn: arn:aws:acm:us-east-1:898195409977:certificate/9531edc3-ef2e-4d67-8755-a16cfc2e69ea
          SslSupportMethod: sni-only
        DefaultRootObject: index.html

  MyRoute53:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z06357283MQT76REX6QUK # DON'T HARDCODE !!!
      RecordSets:
        - Name: phdit.net
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # DON'T HARDCODE !!!
            DNSName: !GetAtt MyDistribution.DomainName

  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
          - AttributeName: "ID"
            AttributeType: "S"
      KeySchema:
          - AttributeName: "ID"
            KeyType: "HASH" 
      TableName: cloud-resume
      BillingMode: PAY_PER_REQUEST


  GetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get_function/
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        GetFunction:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get
            Method: get
  PutFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: put_function/
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        PutFunction:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /put
            Method: get
  
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get"
  GetFunction:
    Description: "Get Function Lambda ARN"
    Value: !GetAtt GetFunction.Arn
  GetFunctionIamRole:
    Description: "Implicit IAM Role created for Get Function"
    Value: !GetAtt GetFunctionRole.Arn
  PutFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for PutFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/put"
  PutFunction:
    Description: "Put Function Lambda Function ARN"
    Value: !GetAtt PutFunction.Arn
  PutFunctionIamRole:
    Description: "Implicit IAM Role created for Put Function"
    Value: !GetAtt PutFunctionRole.Arn
  MyWebsite:
    Description: "S3 Bucket for my static Website"
    Value: !GetAtt MyWebsite.Arn
  MyOAI:
    Description: "CloudFront Origin Access Identity"
    Value: !GetAtt MyOAI.Id
  MyDistro:
    Description: "My CLFR Distro ID"
    Value: !GetAtt MyDistribution.Id
